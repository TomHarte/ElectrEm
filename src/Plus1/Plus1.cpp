/*

	ElectrEm (c) 2000-8 Thomas Harte - an Acorn Electron Emulator

	This is open software, distributed under the GPL 2, see 'Copying' for
	details

	Plus1.cpp
	=========

	Contains what is emulated, so far, of the Plus 1. Mostly just an
	Epson FX -> RTF filter.

*/

#include "Plus1.h"
#include "../HostMachine/HostMachine.h"

#define LIB_PNG_PRESENT
#ifdef LIB_PNG_PRESENT
#include "png.h"
#endif

/*
	paper sizes of interest:
					A4		210 × 297	(8.3 × 11.7)

				US:
					Legal	216 × 356	(8.5 × 14)
					Letter	216 × 279	(8.5 × 11)
*/

#define PAGE_W				(8*OUTPUT_DPI)
#define PAGE_H				(11*OUTPUT_DPI)

bool FX80Glyph::DoubleStrike;
bool FX80Glyph::Underline;
bool FX80Glyph::ExpandedMode;
bool FX80Glyph::Proportional;
int FX80Glyph::ColumnAdvance;
FX80HeightMode FX80Glyph::HeightMode;
int FX80Glyph::XAdvance;
bool FX80Glyph::Emphasis, FX80Glyph::EmphasisToggle;
int FX80Glyph::CurLine;

void FX80Glyph::Begin()
{
	CurLine = Proportional ? StartColumn : 0;
	EmphasisToggle = false;
}

int FX80Glyph::Begin(FX80State &S)
{
	if(S.EliteMode)
		XAdvance = VIRTUAL_DPI / (72*2);
	else
		XAdvance = S.CondensedMode ? (VIRTUAL_DPI / (103*2)) : (VIRTUAL_DPI / (60*2));

	if(S.CondensedMode || S.EliteMode) Emphasis = false;

	if(Emphasis = S.Emphasis)
		XAdvance >>= 1;

	Underline = S.Underline;
	if(ExpandedMode = S.ExpandedMode)
		XAdvance <<= 1;
	DoubleStrike = S.DoubleStrike;
	Proportional = S.Proportional;
	HeightMode = S.HeightMode;

	Begin();

	int Code = XAdvance << 6;
	if(Underline) Code |= 1;
	if(DoubleStrike) Code |= 2;
	if(Proportional) Code |= 4;
	if(Emphasis) Code |= 8;
	if(HeightMode == HM_SUBSCRIPT) Code |= 16;
	if(HeightMode == HM_SUPERSCRIPT) Code |= 32;
	return Code;
}

Uint32 *FX80Glyph::GetLine()
{ 
	if(CurLine == (Proportional ? EndColumn+1 : 12) + (ExpandedMode ? 1 : 0))
	{
		return NULL;
	}

	static Uint32 Result;
	Result = 0;

	if(CurLine < 12)
		Result |= Image[CurLine];
	if(CurLine > 0 && ExpandedMode)
		Result |= Image[CurLine-1];

	if(DoubleStrike) Result |= Result >> 1;

	switch(HeightMode)
	{
		case HM_NORMAL: break;
		default:
		{
			Uint32 NewR = 0;
			Uint32 NewMask = (HeightMode == HM_SUPERSCRIPT) ? GLYPHLINE_START : (GLYPHLINE_START >> 8);
			Uint32 OldMask = GLYPHLINE_START;
			while(OldMask)
			{
				if(Result&OldMask) NewR |= NewMask;
				OldMask >>= 2;
				NewMask >>= 1;
			}
			Result = NewR;
		}
		break;
	}

	if(Underline && (!(CurLine&1) && !ExpandedMode)) Result |= 1;

	EmphasisToggle ^= true;
	if(Emphasis && EmphasisToggle) return &Result;
	CurLine++;
	return &Result;
}

int FX80Glyph::GetWidth()
{
	return (Proportional ? (EndColumn - StartColumn + 1) : 12) * XAdvance * (Emphasis ? 2 : 1);
}

int FX80Glyph::GetXAdvance()
{
	return XAdvance;
}

void FX80Glyph::SetFromMask(int *Mask, int Start, int End)
{
	StartColumn = Start;
	EndColumn = End;

	// make columns
	for(int c = 0; c < 11; c++)
	{
		int base = c;
		int mask = GLYPHLINE_START;
		Image[c] = 0;
		int b = 9;
		while(b--)
		{
			if(Mask[base]) Image[c] |= mask;
			mask >>= 2;
			base += 11;
		}
	}
}

void CPlus1::SetupFont()
{
#define W	1
	// W doesn't mean anything, it just contrasts nicely with the 0s in this editor
	int Widths[256] = {
			12,	12,	11,	10,	6,	8,	12,	5,	12,	12,	11, 12, 12, 12, 12, 11,	// 0
			10, 11, 12, 12, 12,	12,	8,	12,	12,	12,	12,	10,	11,	12,	12,	12,	// 16
			12,	5,	8,	12,	12,	12,	12,	5,	6,	6,	12,	12,	7,	12,	6,	10,	// 32
			12,	8,	12,	12,	12,	12,	12,	12,	12,	12,	6,	6,	10,	12,	10,	12,	// 48
			12,	12,	12,	12,	12,	12,	12,	12,	12,	8,	11,	12,	12,	12,	12,	12,	// 64
			12,	12,	12,	12,	12,	12,	12,	12,	10,	12,	10,	8,	10,	8,	12,	12,	// 80
			5,	12,	11,	11,	11,	12,	10,	11,	11,	8,	9,	10,	8,	12,	11,	12,	// 96
			11,	11,	11,	12,	11,	12,	12,	12,	10,	12,	10,	9,	5,	9,	12,	12,	// 112

			11,	11,	11,	11,	8,	8,	12,	10,	11,	12,	12,	12,	12,	12,	11,	11,	// 128
			12,	11,	12,	12,	12,	11,	9,	12,	12,	12,	11,	11,	12,	12,	11,	12,	// 144
			12,	10,	10,	12,	11,	12,	12,	5,	8,	8,	12,	12,	8,	12,	7,	10,	// 160
			12,	9,	12,	12,	12,	12,	11,	12,	12,	11,	8,	9,	10,	11,	9,	11,	// 176
			12,	12,	12,	12,	12,	12,	12,	12,	12,	10,	12,	12,	10,	12,	12,	12,	// 192
			12,	12,	12,	12,	12,	12,	11,	12,	12,	12,	12,	11,	7,	11,	10,	12, // 208
			5,	11,	11,	11,	12,	11,	12,	11,	11,	9,	10,	11,	9,	11,	10,	11,	// 224
			11,	11,	10,	11,	10,	11,	10,	12,	12,	11,	12,	10,	9,	10,	12,	12	// 240
	};
	int Masks[256][9*11] =
	{
		{											// 0 à
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 1 è
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 2 ù
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 3 ò
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 4 ì
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 5 º
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 6 £
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 7 ¡
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 8 ¿
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 9 Ñ
			0, W, 0, W, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 10 ñ
			0, W, 0, W, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 11 
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 12 Pt
			W, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 13
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 14
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 15
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
		},
		{											//16 §
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 17
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 18
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 19
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 20
			0, 0, 0, W, 0, W, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 21
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 22
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 23
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 24
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 25
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 26
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 27
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 28
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 29 É
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 30 é
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 31
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 32
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 33 !
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 34 "
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 35 #
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 36 $
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 37 %
			W, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 38 &
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 39 '
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 40 (
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 41 )
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 42 *
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 43 +
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 44 ,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
		},
		{											// 45 -
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 46 .
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 47 /
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 48 0
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 49 1
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 50 2
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 51 3
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 52 4
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 53 5
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 54 6
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 55 7
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 56 8
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 57 9
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 58 :
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 59 ;
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 60 <
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 61 =
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 62 >
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 63 ?
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 64 @
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 65 A
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 66 B
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 67 C
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 68 D
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 69 E
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 70 F
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 71 G
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 72 H
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 73 I
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 74 J
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 75 K
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 76 L
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 77 M
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, 0, 0, W, 0, W, 0, 0,
			W, 0, 0, W, 0, W, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 78 N
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 79 O
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 80 P
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 81 Q
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 82 R
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 83 S
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 84 T
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 85 U
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 86 V
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 87 W
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, W, 0, 0, W, 0, 0,
			W, 0, W, 0, 0, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 88 X
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 89 Y
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 90 6
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 91 [
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 92 backslash
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 93 ]
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 94 ^
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 95 _
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
		},
		{											// 96 `
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 97 a
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 98 b
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 99 c
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 100 d
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 101 e
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 102 f
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 103 g
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
		},
		{											// 104 h
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 105 i
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 106 j
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 107 k
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 108 l
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 109 m
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 110 n
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 111 o
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 112 p
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 113 q
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
		},
		{											// 114 r
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 115 s
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 116 t
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 117 u
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 118 v
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 119 w
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, W, 0, 0, W, 0, 0,
			W, 0, W, 0, 0, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 120 x
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 121 y
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 122 z
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 123 {
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 124 |
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 125 }
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 126 ~
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 127 0
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 128 [start of italics] à
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 129
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 130
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 131
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 132
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 133
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 134
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 135
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 136
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 137
			0, 0, W, 0, W, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 138
			0, 0, W, 0, W, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 139
			0, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 140
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 141
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 142
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 143
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
		},
		{											// 144 §
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 145
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 146
			0, 0, 0, W, 0, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 147
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 148
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 149
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			W, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 150
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 151
			0, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 152
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 153
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 154
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 155
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 156
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 157
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 158
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 159
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 160
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 161
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 162
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 163
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 164
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 165
			0, W, 0, W, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 166
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 167
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 168
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 169
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 170
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 171
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 172
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 173
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 174
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 175
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 176
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 177
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 178
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 179
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 180
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 181
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 182
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 183
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 184
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 185
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 186
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 187
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 188
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 189
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 190
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 191
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 192
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 193
			0, 0, 0, 0, 0, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 194
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 195
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 196
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 197
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 198
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 199
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 200
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 201
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 202
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 203
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 204
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 205
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, W, 0, W, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 206
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 207
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 208
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 209
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 210
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 211
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 212
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 213
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 214
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 215
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, W, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 216
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 217
			W, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 218
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 219
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 220
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 221
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 222
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 223
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, W, 0, 0,
		},
		{											// 224
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 225
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 226
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 227
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 228
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 229
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 230
			0, 0, 0, 0, 0, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 231
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
		},
		{											// 232
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 233
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 234
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 235
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 236
			0, 0, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 237
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, W, 0, 0, 0,
			W, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 238
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 239
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 240
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 241
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
		},
		{											// 242
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, W, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 243
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 244
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 245
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, W, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 246
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 247
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, W, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, W, 0, 0, W, 0, W, 0, 0, 0,
			W, 0, 0, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 248
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, W, 0, 0, 0, 0, 0,
			W, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 249
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, 0, 0, W, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 250
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, W, 0, W, 0, W, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 251
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 252
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, W, 0, 0, 0, 0, 0, 0, 0, 0,
			0, W, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 253
			0, 0, 0, W, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, W, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, W, 0, 0, 0, 0, 0, 0,
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 254
			0, W, 0, W, 0, 0, 0, 0, 0, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			0, 0, 0, 0, 0, W, 0, W, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},
		{											// 255
			0, 0, 0, 0, W, 0, W, 0, W, 0, 0,
			0, 0, W, 0, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, W, 0, 0, W, 0, 0,
			W, 0, 0, 0, W, 0, 0, 0, W, 0, 0,
			W, 0, 0, W, 0, 0, 0, W, 0, 0, 0,
			0, W, 0, 0, 0, 0, W, 0, 0, 0, 0,
			W, 0, W, 0, W, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		},

	};

#undef W

	int c = 256;
	while(c--)
		RomFont[c].SetFromMask(Masks[c], 0, Widths[c]);
}

CPlus1::CPlus1()
{
	PageData = NULL;
	PrinterTarget = NULL;
	PrinterFileMutex = SDL_CreateMutex();
	SDL_mutexP(PrinterFileMutex);
	SDL_mutexV(PrinterFileMutex);
	PrinterBufferPointer = 0;
	ADCCyclesLeft = 0;
	ADCValue = 128;
	FileName = NULL;
	SetupFont();

	// defaults...
	Colour = true;
	AutoLineFeed = false;
	SetNationality(FX80MODE_UK);
	OutputMode = OM_NONE;
	PDFTarget = NULL;
}

CPlus1::~CPlus1()
{
	CloseFile();
	SDL_DestroyMutex(PrinterFileMutex);
}

void CPlus1::AttachTo(CProcessPool &pool, Uint32 id)
{
	CComponentBase::AttachTo(pool, id);

	// claim Plus 1 status register
	pool.ClaimTrapAddress(id, 0xfc72, 0xffff);

	// centronics interface register
	pool.ClaimTrapAddress(id, 0xfc71, 0xffff);

	// ADC (joysticks) interface register
	pool.ClaimTrapAddress(id, 0xfc70, 0xffff);
}

bool CPlus1::Write(Uint16 Addr, Uint32 TimeStamp, Uint8 Data8, Uint32 Data32)
{
	switch(Addr)
	{
		case 0xfc71:
			BufferChar(Data8);
			PPPtr->Message(PPM_TAPEDATA_TRANSIENT, NULL);
		return true;
		case 0xfc70:
			/* get ADCValue here */
			switch(Data8&0xc)
			{
				case 0x8:
				case 0:
					//differential
					if(Data8&1)
						ADCValue = GetADCChannel((Data8&2) | 1) - GetADCChannel(Data8&2);
					else
						ADCValue = GetADCChannel(Data8&2) - GetADCChannel((Data8&2) | 1);
				break;

				case 0x04:
					ADCValue = GetADCChannel(Data8&3);
				break;

				case 0xc:
					ADCValue = GetADCChannel(Data8&3) - GetADCChannel(3);
				break;
			}

			/* actually won't be ready for 40 us... which is 80 cycles on the 2 Mhz bus*/
			ADCCyclesLeft = 80;
		return true;
	}

	return false;
}

Uint8 CPlus1::GetADCChannel(int channel)
{
	return 128;
}

Uint8 CPlus1::GetADCButtons()
{
	return 0x30;	/* active low! */
}

Uint32 CPlus1::Update(Uint32 TotalCycles, bool Catchup)
{
	if(ADCCyclesLeft > TotalCycles)
		ADCCyclesLeft -= TotalCycles;
	else
		ADCCyclesLeft = 0;

	return CYCLENO_ANY;
}

bool CPlus1::Read(Uint16 Addr, Uint32 TimeStamp, Uint8 &Data8, Uint32 &Data32)
{
	switch(Addr)
	{
		case 0xfc72:
			/* status register */
			Data8 = 0x3f | (ADCCyclesLeft ? 0x40 : 0);	/* printer is free, no fire buttons pressed, check ADC */
		return true;
		case 0xfc70:
			Data8 = ADCValue;
		return true;
	}
	return false;
}

void CPlus1::AllocateImage()
{
	HeadX = HeadY = 0;

	// 720 DPI, so massive...
	if(Colour)
	{
		PageData = new Uint8[ (PAGE_W * PAGE_H) >> 1 ];
		memset(PageData, 0, (PAGE_W * PAGE_H) >> 1);
	}
	else
	{
		PageData = new Uint8[ (PAGE_W * PAGE_H) >> 3 ];
		memset(PageData, 0xff, (PAGE_W * PAGE_H) >> 3);
	}
}

void CPlus1::SetNationality(int Nationality)
{
	int c = 256;
	while(c--)
		PrintCharMapping[c] = c;

	switch(Nationality)
	{
		default:
		case FX80MODE_USA:
			// normal ordering
		break;
#define SetMapping(a, b)	PrintCharMapping[a] = b; PrintCharMapping[a+128] = b+128;
		case FX80MODE_FRANCE:
			// code 64 produces à
			SetMapping(64, 0);
			SetMapping(91, 5);
			SetMapping(92, 15);
			SetMapping(93, 16);
			SetMapping(123, 30);
			SetMapping(124, 2);
			SetMapping(125, 1);
			SetMapping(126, 22);
		break;
		case FX80MODE_GERMANY:
			SetMapping(64, 16);
			SetMapping(91, 23);
			SetMapping(92, 24);
			SetMapping(93, 25);
			SetMapping(123, 26);
			SetMapping(124, 27);
			SetMapping(125, 28);
			SetMapping(126, 17);
		break;
		case FX80MODE_UK:
			SetMapping(35, 6);
		break;
		case FX80MODE_DENMARK:
			SetMapping(91, 18);
			SetMapping(92, 20);
			SetMapping(93, 13);
			SetMapping(123, 19);
			SetMapping(124, 21);
			SetMapping(125, 14);
		break;
		case FX80MODE_SWEDEN:
			SetMapping(36, 11);
			SetMapping(64, 29);
			SetMapping(91, 23);
			SetMapping(92, 24);
			SetMapping(93, 13);
			SetMapping(94, 25);
			SetMapping(96, 30);
			SetMapping(123, 26);
			SetMapping(124, 27);
			SetMapping(125, 14);
			SetMapping(126, 28);
		break;
		case FX80MODE_ITALY:
			SetMapping(91, 5);
			SetMapping(93, 30);
			SetMapping(96, 2);
			SetMapping(123, 0);
			SetMapping(124, 3);
			SetMapping(125, 1);
			SetMapping(126, 4);
		break;
		case FX80MODE_SPAIN:
			SetMapping(35, 12);
			SetMapping(91, 7);
			SetMapping(92, 8);
			SetMapping(93, 9);
			SetMapping(123, 10);
			SetMapping(124, 22);
		break;
		case FX80MODE_JAPAN:
			SetMapping(92, 31);
		break;
		case FX80MODE_NORWAY:
			SetMapping(36, 11);
		case FX80MODE_DENMARKII:
			SetMapping(64, 29);
			SetMapping(91, 18);
			SetMapping(92, 20);
			SetMapping(93, 13);
			SetMapping(94, 25);
			SetMapping(96, 30);
			SetMapping(123, 19);
			SetMapping(124, 21);
			SetMapping(125, 14);
			SetMapping(126, 28);
		break;
#undef SetMapping
	}
}

void CPlus1::SaveAndClearImage()
{
#ifdef LIB_PNG_PRESENT
	if(FileName && PageData)
	{
		png_structp png_ptr;
		png_infop info_ptr;

		png_ptr=png_create_write_struct(PNG_LIBPNG_VER_STRING, NULL,NULL,NULL);
		info_ptr= png_create_info_struct(png_ptr);

		char *TargetName = new char[strlen(FileName) + 30];
		sprintf(TargetName, "%s - Page %d.png", FileName, PageNum);
		FILE *output = fopen(TargetName, "wb");
		delete[] TargetName;

		png_init_io(png_ptr, output);

		// this is as close to 720 dpi as I can get...
		png_set_pHYs(png_ptr, info_ptr, 28346, 28346, PNG_RESOLUTION_METER);

		png_byte **RowPointers;
		RowPointers = new png_byte *[PAGE_H];

		if(Colour)
		{
			int c = PAGE_H;
			while(c--)
				RowPointers[c] = &PageData[(c * PAGE_W) >> 1];

			png_set_IHDR(png_ptr, info_ptr, PAGE_W, PAGE_H, 4, PNG_COLOR_TYPE_PALETTE, PNG_INTERLACE_NONE, PNG_COMPRESSION_TYPE_DEFAULT, PNG_FILTER_TYPE_DEFAULT);
			png_color palette[8] = {
					{255, 255, 255},{255, 0, 255},	{0, 255, 255},	{0, 0, 255},	
					{255, 255, 0},	{255, 0, 0},	{0, 255, 0},	{0, 0, 0}};
			png_set_PLTE(png_ptr, info_ptr, palette, 8);
			png_set_rows(png_ptr, info_ptr, RowPointers);

			png_write_png(png_ptr, info_ptr, PNG_TRANSFORM_IDENTITY, NULL);
		}
		else
		{
			int c = PAGE_H;
			while(c--)
				RowPointers[c] = &PageData[(c * PAGE_W) >> 3];

			png_set_IHDR(png_ptr, info_ptr, PAGE_W, PAGE_H, 1, PNG_COLOR_TYPE_GRAY, PNG_INTERLACE_NONE, PNG_COMPRESSION_TYPE_DEFAULT, PNG_FILTER_TYPE_DEFAULT);
			png_set_rows(png_ptr, info_ptr, RowPointers);

			png_write_png(png_ptr, info_ptr, PNG_TRANSFORM_IDENTITY, NULL);
		}
		delete[] RowPointers;
		png_destroy_write_struct(&png_ptr,&info_ptr);
		fclose(output);
	}
	if(Colour)
	{
		PageData = new Uint8[ (PAGE_W * PAGE_H) >> 1 ];
		memset(PageData, 0, (PAGE_W * PAGE_H) >> 1);
	}
	else
	{
		PageData = new Uint8[ (PAGE_W * PAGE_H) >> 3 ];
		memset(PageData, 0xff, (PAGE_W * PAGE_H) >> 3);
	}
#endif
}

void CPlus1::FreeImage()
{
	SaveAndClearImage();

	if(PageData)
	{
		delete[] PageData;
		PageData = NULL;
	}
}

void CPlus1::PutDot(int x, int y)
{
	switch(OutputMode)
	{
		default: break;
		case OM_BITMAP:
		{
			int PixShape[] =
			{
				0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
				0, 0, 1, 1, 1, 1, 1, 1, 0, 0,
				0, 1, 1, 1, 1, 1, 1, 1, 1, 0,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				0, 1, 1, 1, 1, 1, 1, 1, 1, 0,
				0, 0, 1, 1, 1, 1, 1, 1, 0, 0,
				0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
			};
			for(int lx = 0; lx < 10; lx++)
				for(int ly = 0; ly < 10; ly++)
				{
					if(
						y+ly >= 0 && y+ly < PAGE_H &&
						x+lx >= 0 && x+lx < PAGE_W &&
						PixShape[lx*10 + ly])
					{
						int Index = ((y + ly)*PAGE_W) + x + lx;
						if(!Colour)
							PageData[Index >> 3] &= ~(128 >> (Index&7));
						else
							PageData[Index >> 1] |= (Index&1) ? (ColourMask) : (ColourMask << 4);
					}
				}
		}
		break;
		case OM_PDF:
			PDFTarget->AddPoint((float)x / (OUTPUT_DPI / 72), (float)y / (OUTPUT_DPI / 72));
		break;
	}
}

void CPlus1::DoImpact(Uint32 mask, bool AdvanceSlow)
{
	int PosY = DPI_TO_PIXELS(HeadY);
	int PosX = DPI_TO_PIXELS(HeadX);

	while(mask&((GLYPHLINE_START << 1)-1))
	{
		if(mask&GLYPHLINE_START) PutDot(PosX, PosY);
		PosY += 5;
		mask <<= 1;
	}
}

void CPlus1::MovePrintHeadRelative(int x, int y)
{
	HeadX += x; HeadY += y;

	if(HeadX < 0) HeadX = 0;
	if(HeadY < 0) HeadY = 0;

	if(DPI_TO_PIXELS(HeadY+LineSpacing) >= PAGE_H)
	{
		HeadY = 0;
		FormFeed();
	}
}

void CPlus1::MovePrintHeadAbsolute(int x, int y)
{
	HeadX = x; HeadY = y;
}

bool CPlus1::CheckGlyphWidth(int Move)
{
	return !(DPI_TO_PIXELS(HeadX+Move) > PAGE_W);
}

/* printer output functions */
bool CPlus1::SetPrinterTarget(char *fname)
{
	CloseFile();
	PageNum = 1;

	char *PDFExts[] = {"pdf", NULL };
	if(GetHost() -> ExtensionIncluded(fname, PDFExts))
	{
		SDL_mutexP(PrinterFileMutex);
		InText = false;
		PDFTarget = new CPDF;
		PDFTarget->Open(fname);
		PDFTarget->NewPage((PAGE_W*72)/OUTPUT_DPI, (PAGE_H*72)/OUTPUT_DPI);
		PDFTarget->NewStream();
		OutputMode = OM_PDF;
		SDL_mutexV(PrinterFileMutex);
	}
	else
	{
		char *BitmapExts[] = { "png", NULL };
		if(GetHost() -> ExtensionIncluded(fname, BitmapExts))
		{
			PrinterTarget = NULL;
			FileName = strdup(fname);
			FileName[strlen(FileName)-4] = '\0';

			AllocateImage();
			OutputMode = OM_BITMAP;
		}
		else
		{
			SDL_mutexP(PrinterFileMutex);
			FileName = NULL;
			if(PrinterTarget = fopen(fname, "wb"))
			{
				/* decide whether this is an RTF or not */
				char *RTFExts[] = { "rtf", NULL };
				bool RawPrinterFeed = !GetHost() -> ExtensionIncluded(fname, RTFExts);
				OutputMode = OM_TXT;

				if(!RawPrinterFeed)
				{
					/* open RTF */
					fprintf(PrinterTarget, "{\\rtf1 {\\fonttbl\\f0\\fmodern\\fcharset77 Courier;} \\f0 ");
					OutputMode = OM_RTF;
				}
			}
			SDL_mutexV(PrinterFileMutex);
		}
	}

	/* default */
	Reset();

	return PrinterTarget ? true : false;
}

void CPlus1::CloseFile()
{
	FlushPrintBuffer();
	ExitText();
	if(PDFTarget)
	{
		PDFTarget->EndStream();
		PDFTarget->Close();
		delete PDFTarget;
		PDFTarget = NULL;
	}
	FreeImage();

	/* get file access */
	SDL_mutexP(PrinterFileMutex);

	if(PrinterTarget)
	{
		if(OutputMode == OM_RTF)
			fputc('}', PrinterTarget);

		fclose(PrinterTarget);
		PrinterTarget = NULL;
	}

	/* release file access */
	SDL_mutexV(PrinterFileMutex);

	if(FileName)
	{
		free(FileName);
		FileName = NULL;
	}
	OutputMode = OM_NONE;
}

bool CPlus1::IOCtl(Uint32 Control, void *Parameter, Uint32 TimeStamp)
{
	switch(Control)
	{
		case IOCTL_SETCONFIG_RESET:
		case IOCTL_SETCONFIG:
			/* read print settings here! */
			DefaultNationality = ((ElectronConfiguration *)Parameter)->Printer.Nationality;
		return false;

		case IOCTL_SUPERRESET:
		case IOCTL_RESET:
			Reset();
		return true;
	}

	return CComponentBase::IOCtl(Control, Parameter, TimeStamp);
}

void CPlus1::DoFormFeed()
{
	BufferChar('\014');
}

void CPlus1::BufferChar(char c)
{
	PrintBuffer[PrinterBufferPointer] = c;
	PrinterBufferPointer++;
	if(PrinterBufferPointer == PLUS1_PRINTBUFFERSIZE || (c == '\n') || (c == '\014') || (c == '\r' && AutoLineFeed))
		FlushPrintBuffer();
}

void CPlus1::SetDoubleStrike(bool t)
{
	State.DoubleStrike = t;
	if(OutputMode == OM_RTF)
	{
		if(State.DoubleStrike)
			fputs("\\b ", PrinterTarget);
		else
			fputs("\\b0 ", PrinterTarget);
	}
}

void CPlus1::SetEmphasis(bool t)
{
	State.Emphasis = t;
	if(OutputMode == OM_RTF)
	{
		if(State.Emphasis)
			fputs("\\b ", PrinterTarget);
		else
			fputs("\\b0 ", PrinterTarget);
	}
}

void CPlus1::SetItalics(bool t)
{
	Italics = t;
	PrintCharXor = 0;
	switch(OutputMode)
	{
		case OM_RTF:
			if(Italics)
				fputs("\\i ", PrinterTarget);
			else
				fputs("\\i0 ", PrinterTarget);
		break;
		case OM_BITMAP:
			PrintCharXor = t ? 0x80 : 0;
		break;
	}
}

void CPlus1::SetUnderline(bool t)
{
	State.Underline = t;
	if(OutputMode == OM_RTF)
	{
		if(State.Underline)
			fputs("\\ul ", PrinterTarget);
		else
			fputs("\\ul0 ", PrinterTarget);
	}
}

void CPlus1::SetExpandedMode(bool t)
{
	State.ExpandedMode = t;
}

void CPlus1::FixTextWidth()
{
	if(OutputMode == OM_RTF)
	{
		if(State.EliteMode)
			fputs("\\fs20 ", PrinterTarget);
		else
			if(State.CondensedMode)
				fputs("\\fs16 ", PrinterTarget);
			else
				fputs("\\fs24 ", PrinterTarget);
	}
}

void CPlus1::SetEliteMode(bool t)
{
	State.EliteMode = t;
	FixTextWidth();
}

void CPlus1::SetProportional(bool t)
{
	State.Proportional = t;
}

void CPlus1::SetCondensedMode(bool t)
{
	State.CondensedMode = t;
	FixTextWidth();
}

void CPlus1::SetHeightMode(FX80HeightMode h)
{
	State.HeightMode = h;

	if(OutputMode == OM_RTF)
	{
		switch(State.HeightMode)
		{
			case HM_NORMAL:
				fputs("\\nosupersub ", PrinterTarget);
			break;
			case HM_SUPERSCRIPT:
				fputs("\\super ", PrinterTarget);
			break;
			case HM_SUBSCRIPT:
				fputs("\\sub ", PrinterTarget);
			break;
		}
	}
}

void CPlus1::DoGlyph(FX80Glyph *G)
{
	int c = 0;
	Uint32 *M;
	while(M = G->GetLine())
	{
		DoImpact(*M);
		MovePrintHeadRelative(G->GetXAdvance(), 0);
		c++;
	}
}

/* this should be 1/3rd of a dot-ish */
#define DOUBLESTRIKE_OFFSET	(VIRTUAL_DPI/240)

void CPlus1::PrintChar(Uint8 c)
{
	if(c < 32) return;
	c = PrintCharMapping[c]^PrintCharXor;
	FX80Glyph *CurGlyph = UserFont ? &RamFont[c] : &RomFont[c];
	CurGlyph->Begin(State);

	switch(OutputMode)
	{
		case OM_PDF:
		{
			if(!CheckGlyphWidth(CurGlyph->GetWidth()))
			{
				ExitText();
				CarriageReturn();
				LineFeed();
				EnterText();
			}

			char buf[2] = {c, 0};
			PDFTarget->AddText(buf);
			MovePrintHeadRelative(CurGlyph->GetWidth(), 0);
		}
		break;
		case OM_BITMAP:
		{
			if(!CheckGlyphWidth(CurGlyph->GetWidth()))
			{
				CarriageReturn();
				LineFeed();
			}

			DoGlyph(CurGlyph);
		}
		break;
		case OM_RTF:
			switch(c)
			{
				default:
					fputc(c, PrinterTarget);
				break;
				case '\\':	fputs("\\\\", PrinterTarget);	break;
				case '{':	fputs("\\{", PrinterTarget);	break;
				case '}':	fputs("\\}", PrinterTarget);	break;
			}
		break;
		case OM_TXT:
			fputc(c, PrinterTarget);
		break;
	}
}

void CPlus1::FormFeed(bool Reverse)
{
	switch(OutputMode)
	{
		default: break;
		case OM_RTF:
			fputs("\\page ", PrinterTarget);
		break;
		case OM_BITMAP:
			if(Reverse)
			{
				HeadY = 0;
			}
			else
			{
				SaveAndClearImage();
				PageNum++;
			}
		break;
		case OM_PDF:
			PDFTarget->EndStream();
			PDFTarget->NewPage((PAGE_W*72)/OUTPUT_DPI, (PAGE_H*72)/OUTPUT_DPI);
			PDFTarget->NewStream();
		break;
	}
}

void CPlus1::CarriageReturn()
{
	MovePrintHeadRelative(-HeadX, 0);
	if(AutoLineFeed)
		LineFeed();
}

void CPlus1::LineFeed(bool Reverse)
{
	MovePrintHeadRelative( -HeadX, Reverse ? -LineSpacing: LineSpacing);
	if(OutputMode == OM_RTF)
		fputs("\\line ", PrinterTarget);
}

void CPlus1::ExitText()
{
	if(OutputMode != OM_PDF) return;
	if(InText)
	{
		InText = false;
		// end text
		PDFTarget->AddText(") Tj ET ");
	}
}

void CPlus1::EnterText()
{
	if(OutputMode != OM_PDF) return;
	if(!InText)
	{
		InText = true;

		// check for font
		char FontName[128];
		int c = RomFont[0].Begin(State);
		sprintf(FontName, "Font%d", c);
		PDFTarget->AddFont(FontName, UserFont ? RamFont : RomFont, State);

		// enter text
		char ITextStr[2048];
		sprintf(ITextStr, "BT /%s 12 Tf %d %d Td (", FontName, DPI_TO_POINTS(HeadX), PDFTarget->GetPageHeight() - DPI_TO_POINTS(HeadY) - 10);	// - 10 because PDF uses the lower left as the origin
		PDFTarget->AddText(ITextStr);
	}
}

void CPlus1::Reset()
{
	GraphicsWidth = 0;
	LineSpacing = 12*(VIRTUAL_DPI/72);
	HeadX = HeadY = 0;

	SetDoubleStrike(false);
	SetEmphasis(false);
	SetItalics(false);
	SetUnderline(false);
	SetHeightMode(HM_NORMAL);
	SetExpandedMode(false);
	SetCondensedMode(false);
	SetEliteMode(false);
	SetProportional(false);
	ExitText();

	ColourMask = 7;
}

void CPlus1::FlushPrintBuffer()
{
	if(PrinterBufferPointer)
	{
		/* get file if necessary access */
		if(OutputMode != OM_BITMAP) SDL_mutexP(PrinterFileMutex);

		enum TokTypes {
			TOK_CHAR,	TOK_LINEFEED,	TOK_CARRIAGERETURN,		TOK_HORIZTAB,	TOK_FORMFEED,
			TOK_REVERSELINEFEED,

			TOK_SETLINESPACING72,		TOK_SETLINESPACING216,
			TOK_LINESPACING18,			TOK_LINESPACING772,			TOK_LINESPACING16,

			TOK_BEEPER,				TOK_VERTTAB,	TOK_BACKSPACE,
			TOK_SETGRAPHICSMODE,	TOK_60DPIGRAPHICS,
			TOK_120DPIGRAPHICS,		TOK_FAST120DPIGRAPHICS,
			TOK_240DPIGRAPHICS,

			TOK_EMPHASISON,			TOK_EMPHASISOFF,
			TOK_ITALICSON,			TOK_ITALICSOFF,
			TOK_UNDERLINEON,		TOK_UNDERLINEOFF,
			TOK_EXPANDEDON,			TOK_EXPANDEDOFF,
			TOK_CONDENSEDON,		TOK_CONDENSEDOFF,
			TOK_DOUBLESTRIKEON,		TOK_DOUBLESTRIKEOFF,
			TOK_ELITEON,			TOK_ELITEOFF,
			TOK_PROPORTIONALON,		TOK_PROPORTIONALOFF,

			TOK_SETCOLOUR,			TOK_SETNATIONALITY,

			TOK_NOSCRIPT,			TOK_SUPERSCRIPT,		TOK_SUBSCRIPT,
			TOK_RESET,

			TOK_SETHALFSPEED,			TOK_SETFULLSPEED,
			TOK_SETIMMEDIATEPRINTON,	TOK_SETIMMEDIATEPRINTOFF,

			TOK_SETMASTERPRINTMODE,		TOK_RETURNTOTOP,

			TOK_SETHORIZONTALPOSITIONABS,	TOK_SETHORIZONTALPOSITIONREL,

			TOK_VERTICALADVANCE, TOK_HORIZVERTSKIP,

			TOK_DEFER
		};
		struct Tok {
			char *String;
			int StrLen;
			TokTypes Type;
			int Extra;
		} Tokens[] =		// \033 is the escape character
		{
			{ "\n",		1,	TOK_LINEFEED, 0 },
			{ "\033\n",	2,	TOK_REVERSELINEFEED, 0 },
			{ "\r",		1,	TOK_CARRIAGERETURN, 0 },
			{ "\014",	1,	TOK_FORMFEED, 0 },
			{ "\007",	1,	TOK_BEEPER, 0 },
			{ "\t",		1,	TOK_HORIZTAB, 0 },
			{ "\b",		1,	TOK_BACKSPACE,	0 },
			{ "\v",		1,	TOK_VERTTAB, 0 },

			{ "\033\014",	2,	TOK_RETURNTOTOP, 0 },
			{ "\033!",	2,	TOK_SETMASTERPRINTMODE, 1 },

			{ "\033A",	2,	TOK_SETLINESPACING72, 1 },
			{ "\0333",	2,	TOK_SETLINESPACING216, 1 },
			{ "\0330",	2,	TOK_LINESPACING18, 0 },
			{ "\0331",	2,	TOK_LINESPACING772, 0 },
			{ "\0331",	2,	TOK_LINESPACING16, 0 },

			{ "\033K",	2,	TOK_60DPIGRAPHICS, 0 },
			{ "\033L",	2,	TOK_120DPIGRAPHICS, 0 },
			{ "\033Y",	2,	TOK_FAST120DPIGRAPHICS, 0 },
			{ "\033Z",	2,	TOK_240DPIGRAPHICS, 0 },
			{ "\033*",	2,	TOK_SETGRAPHICSMODE, 3 },

			{ "\033E",	2,	TOK_EMPHASISON, 0 },
			{ "\033F",	2,	TOK_EMPHASISOFF, 0 },
			{ "\0334",	2,	TOK_ITALICSON, 0 },
			{ "\0335",	2,	TOK_ITALICSOFF, 0 },
			{ "\033G",	2,	TOK_DOUBLESTRIKEON, 0 },
			{ "\033H",	2,	TOK_DOUBLESTRIKEOFF, 0 },
			{ "\033M",	2,	TOK_ELITEON, 0 },
			{ "\033P",	2,	TOK_ELITEOFF, 0 },

			{ "\033p\000",	3,	TOK_PROPORTIONALOFF, 0 },	{ "\033p0", 3,	TOK_PROPORTIONALOFF, 0 },
			{ "\033p\001",	3,	TOK_PROPORTIONALON, 0 },	{ "\033p1", 3,	TOK_PROPORTIONALON, 0 },

			{ "\033-\000",	3,	TOK_UNDERLINEOFF, 0 },	{ "\033-0", 3,	TOK_UNDERLINEOFF, 0 },
			{ "\033-\001",	3,	TOK_UNDERLINEON, 0 },	{ "\033-1", 3,	TOK_UNDERLINEON, 0 },

			{ "\033W\000",	3,	TOK_EXPANDEDOFF, 0 },	{ "\033W0",	3,	TOK_EXPANDEDOFF, 0 },
			{ "\033W\001",	3,	TOK_EXPANDEDON, 0 },	{ "\033W1",	3,	TOK_EXPANDEDON, 0 },

			{ "\033i\000",	3,	TOK_SETIMMEDIATEPRINTOFF, 0 },	{ "\033i0",	3,	TOK_SETIMMEDIATEPRINTOFF, 0 },
			{ "\033i\001",	3,	TOK_SETIMMEDIATEPRINTON, 0 },	{ "\033i1",	3,	TOK_SETIMMEDIATEPRINTON, 0 },

			{ "\033S\000", 3,	TOK_SUPERSCRIPT, 0 },	{ "\033S0",	3,	TOK_SUPERSCRIPT, 0 },
			{ "\033S\001", 3,	TOK_SUBSCRIPT, 0 },		{ "\033S1",	3,	TOK_SUBSCRIPT, 0 },
			{ "\033T",		2,	TOK_NOSCRIPT, 0 },

			{ "\033@",		2,	TOK_RESET, 0 },

			{ "\017",		1,	TOK_CONDENSEDON, 0 },		{ "\022",		1,	TOK_CONDENSEDOFF, 0 },
			{ "\033\017",	1,	TOK_CONDENSEDON, 0 },		{ "\033\022",	1,	TOK_CONDENSEDOFF, 0 },

			{ "\033s\000",	3,	TOK_SETFULLSPEED, 0 },	{ "\033s0",	3,	TOK_SETFULLSPEED, 0 },
			{ "\033s\001",	3,	TOK_SETHALFSPEED, 0 },	{ "\033s1",	3,	TOK_SETHALFSPEED, 0 },

			{ "\033r",		2,	TOK_SETCOLOUR, 1 },
			{ "\033R",		2,	TOK_SETNATIONALITY, 1 },

			{ "\033$",		2,	TOK_SETHORIZONTALPOSITIONABS, 2},
			{ "\033\\",		2,	TOK_SETHORIZONTALPOSITIONREL, 2},
			{ "\033J",		2,	TOK_VERTICALADVANCE, 1},
			{ "\033f",		2,	TOK_HORIZVERTSKIP, 2},

			{ NULL }
		};

		unsigned int c = 0;

		while(c < PrinterBufferPointer)
		{
			if(GraphicsWidth)
			{
				GraphicsWidth--;
				if(OutputMode == OM_BITMAP)
				{
					if(!SkipDot) DoImpact((Uint16)PrintBuffer[c] << 1);	// can't hit lowest pin
					SkipDot ^= SkipDotToggle;
					MovePrintHeadRelative(AddHeadX, 0);
				}
				c++;
				if(!GraphicsWidth)
					printf("Last graphics char: %d\n", PrintBuffer[c-1]);
			}
			else
			{
				TokTypes Token;
				Token = TOK_CHAR;
				Uint8 Char;
				Uint8 *Data;

				Tok *TPtr = Tokens;
				while(TPtr->String)
				{
					if((PrinterBufferPointer-c) >= TPtr->StrLen)
					{
						if(!memcmp(TPtr->String, &PrintBuffer[c], TPtr->StrLen))
						{
							if((PrinterBufferPointer-c) >= TPtr->StrLen+TPtr->Extra)
							{
								Token = TPtr->Type;
								c += TPtr->StrLen;
								Data = &PrintBuffer[c];
								c += TPtr->Extra;
								break;
							}
							Token = TOK_DEFER;
							break;
						}
					}
					else
					{
						if(!memcmp(TPtr->String, &PrintBuffer[c], PrinterBufferPointer-c))
						{
							Token = TOK_DEFER;
							break;
						}
					}

					TPtr++;
				}

				if(Token == TOK_CHAR)
				{
					EnterText();
					Char = PrintBuffer[c];
					c++;
				}
				else
					ExitText();

				if(Token == TOK_DEFER)
					break;

				switch(Token)
				{
					case TOK_RESET:				Reset();						break;
					case TOK_CHAR:				PrintChar(Char);				break;
					case TOK_LINEFEED:			LineFeed(false);				break;
					case TOK_REVERSELINEFEED:	LineFeed(true);					break;
					case TOK_CARRIAGERETURN:	CarriageReturn();				break;
					case TOK_FORMFEED:			FormFeed();						break;
					case TOK_BACKSPACE:
					{
						FX80Glyph *CurGlyph = UserFont ? &RamFont[32] : &RomFont[32];
						CurGlyph->Begin(State);

						MovePrintHeadRelative(-CurGlyph->GetWidth(), 0);
					}
					break;
					case TOK_RETURNTOTOP:
						FormFeed(true);
					break;

					case TOK_EMPHASISON:		SetEmphasis(true);				break;
					case TOK_EMPHASISOFF:		SetEmphasis(false);				break;

					case TOK_ITALICSON:			SetItalics(true);				break;
					case TOK_ITALICSOFF:		SetItalics(false);				break;

					case TOK_DOUBLESTRIKEON:	SetDoubleStrike(true);			break;
					case TOK_DOUBLESTRIKEOFF:	SetDoubleStrike(false);			break;

					case TOK_UNDERLINEON:		SetUnderline(true);				break;
					case TOK_UNDERLINEOFF:		SetUnderline(false);			break;

					case TOK_EXPANDEDON:		SetExpandedMode(true);			break;
					case TOK_EXPANDEDOFF:		SetExpandedMode(false);			break;

					case TOK_CONDENSEDON:		SetCondensedMode(true);			break;
					case TOK_CONDENSEDOFF:		SetCondensedMode(false);		break;

					case TOK_ELITEON:			SetEliteMode(true);				break;
					case TOK_ELITEOFF:			SetEliteMode(false);			break;

					case TOK_PROPORTIONALON:	SetProportional(true);			break;
					case TOK_PROPORTIONALOFF:	SetProportional(false);			break;

					case TOK_SUPERSCRIPT:		SetHeightMode(HM_SUPERSCRIPT);	break;
					case TOK_SUBSCRIPT:			SetHeightMode(HM_SUBSCRIPT);	break;
					case TOK_NOSCRIPT:			SetHeightMode(HM_NORMAL);		break;

					case TOK_SETMASTERPRINTMODE:
						SetUnderline( (Data[0]&128) ? true : false );
						SetItalics( (Data[0]&64) ? true : false );
						SetExpandedMode( (Data[0]&32) ? true : false );
						SetDoubleStrike( (Data[0]&16) ? true : false );
						SetEmphasis( (Data[0]&8) ? true : false );
						SetCondensedMode( (Data[0]&4) ? true : false );
						SetProportional( (Data[0]&2) ? true : false );
						SetEliteMode( (Data[0]&1) ? true : false );
					break;

					case TOK_SETLINESPACING72:
						LineSpacing = Data[0] * (VIRTUAL_DPI / 72);
					break;
					case TOK_SETLINESPACING216:
						LineSpacing = Data[0] * (VIRTUAL_DPI / 216);
					break;
					case TOK_LINESPACING18:
						LineSpacing = VIRTUAL_DPI / 8;
					break;
					case TOK_LINESPACING772:
						LineSpacing = 7 * VIRTUAL_DPI / 72;
					break;
					case TOK_LINESPACING16:
						LineSpacing = VIRTUAL_DPI / 6;
					break;

					case TOK_60DPIGRAPHICS:
						AddHeadX = VIRTUAL_DPI/60;	// 60 dpi
						GraphicsWidth = Data[0] | (Data[1] << 8);
						SkipDot = SkipDotToggle = false;
					break;
					case TOK_120DPIGRAPHICS:
						AddHeadX = VIRTUAL_DPI/120;	// 60 dpi
						GraphicsWidth = Data[0] | (Data[1] << 8);
						SkipDot = SkipDotToggle = false;
					break;
					case TOK_240DPIGRAPHICS:
						AddHeadX = VIRTUAL_DPI/120;	// 60 dpi
						GraphicsWidth = Data[0] | (Data[1] << 8);
						SkipDot = SkipDotToggle = false;
					break;
					case TOK_FAST120DPIGRAPHICS:
						AddHeadX = VIRTUAL_DPI/120;	// 60 dpi
						GraphicsWidth = Data[0] | (Data[1] << 8);
						SkipDot = false;
						SkipDotToggle = true;
					break;
					case TOK_SETGRAPHICSMODE:
						SkipDot = SkipDotToggle = false;
						switch(Data[0])
						{
							default:
								AddHeadX = VIRTUAL_DPI/60;	// 60 dpi
							break;
							case 1:
								AddHeadX = VIRTUAL_DPI/120;	// 120 dpi
							break;
							case 2:
								AddHeadX = VIRTUAL_DPI/120;	// 120 dpi, fast
								SkipDotToggle = true;
							break;
							case 3:
								AddHeadX = VIRTUAL_DPI/240;	// 240 dpi
							break;
							case 4:
								AddHeadX = VIRTUAL_DPI/80;	// 80 dpi
							break;
							case 5:
								AddHeadX = VIRTUAL_DPI/72;	// 72 dpi
							break;
							case 6:
								AddHeadX = VIRTUAL_DPI/90;	// 90 dpi
							break;
						}
						GraphicsWidth = Data[1] | (Data[2] << 8);
					break;

					case TOK_SETCOLOUR:
					{
						bool Cyan, Magenta, Yellow;
						switch(Data[0])
						{
							default:
							case 0: Cyan = true;	Magenta = true;		Yellow = true;		break;	// black
							case 1: Cyan = false;	Magenta = true;		Yellow = false;		break;	// magenta
							case 2: Cyan = true;	Magenta = false;	Yellow = false;		break;	// cyan
							case 3: Cyan = true;	Magenta = true;		Yellow = false;		break;	// violet
							case 4: Cyan = false;	Magenta = false;	Yellow = true;		break;	// yellow
							case 5: Cyan = false;	Magenta = true;		Yellow = true;		break;	// orange
							case 6: Cyan = true;	Magenta = false;	Yellow = true;		break;	// green
						}

						ColourMask = Data[0];//(Cyan ? 1 : 0) | (Magenta ? 2 : 0) | (Yellow ? 4 : 0);
						if(!ColourMask) ColourMask = 7;
					}
					break;
					case TOK_SETNATIONALITY:	SetNationality(Data[0]);	break;

					case TOK_SETHALFSPEED:
					case TOK_SETFULLSPEED:
						/* ignored */
					break;

					case TOK_SETHORIZONTALPOSITIONABS:
						MovePrintHeadAbsolute( (Data[0] + (Data[1] << 8)) * (VIRTUAL_DPI / 60), HeadY);
					break;
					case TOK_SETHORIZONTALPOSITIONREL:
					{
						int Pos = Data[0] + ((Data[1]&127) << 8);
						if(Data[1]&64)
						{
							Pos = 32768 - Pos;
						}
						MovePrintHeadRelative( Pos * (VIRTUAL_DPI/120), 0);
					}
					break;
					case TOK_VERTICALADVANCE:
						MovePrintHeadRelative( 0, Data[0] * (VIRTUAL_DPI/216));
					break;
					case TOK_HORIZVERTSKIP:
						if(!Data[0])
						{
							int c = Data[1];
							while(c--)
								PrintChar(' ');
						}
						else
						{
							int c = Data[1];
							while(c--)
								LineFeed();
						}
					break;

					default:
						printf("Unhandled token!\n");
					break;
				}
			}
		}

		/* release file access */
		if(OutputMode != OM_BITMAP) SDL_mutexV(PrinterFileMutex);

		memmove(PrintBuffer, &PrintBuffer[c], PrinterBufferPointer-c);
		PrinterBufferPointer -= c;
	}
}
